# ===== REQUIREMENTS EXPERT PATRIMOINE =====
# Dépendances pour l'application Expert Patrimoine
# Installation: pip install -r requirements.txt

# ===== CORE FRAMEWORK =====
streamlit>=1.28.0                 # Interface web principale
plotly>=5.17.0                    # Graphiques interactifs avancés
pandas>=2.1.0                     # Manipulation données
numpy>=1.24.0                     # Calculs numériques

# ===== BASE DE DONNÉES =====
supabase>=2.0.0                   # Client Supabase
psycopg2-binary>=2.9.0            # PostgreSQL driver
sqlalchemy>=2.0.0                 # ORM (optionnel)

# ===== PARSING FICHIERS =====
openpyxl>=3.1.0                   # Lecture Excel (.xlsx)
xlrd>=2.0.0                       # Support Excel legacy (.xls)
pdfplumber>=0.9.0                 # Extraction PDF (PEA)
PyPDF2>=3.0.0                     # Parser PDF alternatif
pdfminer.six>=20221105             # Parser PDF avancé
unidecode>=1.3.6                  # Pour la normalisation des caractères (accents, etc.)

# ===== CALCULS FINANCIERS =====
scipy>=1.11.0                     # Optimisation (TRI/XIRR)
scikit-learn>=1.3.0              # Machine Learning (optionnel)
yfinance>=0.2.18                  # Données financières benchmarks
quantlib>=1.32                    # Bibliothèque financière avancée

# ===== DATES ET TEMPS =====
python-dateutil>=2.8.0           # Parsing dates flexible
pytz>=2023.3                     # Gestion fuseaux horaires

# ===== UTILITAIRES =====
python-dotenv>=1.0.0             # Variables d'environnement
requests>=2.31.0                 # Requêtes HTTP
urllib3>=2.0.0                   # Client HTTP

# ===== VALIDATION ET TESTS =====
pytest>=7.4.0                    # Framework de tests
pytest-cov>=4.1.0               # Coverage des tests
pydantic>=2.4.0                 # Validation données

# ===== EXPORT ET RAPPORTS =====
reportlab>=4.0.0                 # Génération PDF
jinja2>=3.1.0                   # Templates
markdown>=3.5.0                 # Conversion Markdown

# ===== OPTIMISATION PERFORMANCE =====
cachetools>=5.3.0               # Cache mémoire
redis>=4.6.0                    # Cache Redis (optionnel)
celery>=5.3.0                   # Tâches asynchrones (optionnel)

# ===== MONITORING ET LOGS =====
loguru>=0.7.0                   # Logging avancé
prometheus_client>=0.17.0       # Métriques (optionnel)

# ===== DÉVELOPPEMENT =====
black>=23.9.0                   # Formatage code
flake8>=6.1.0                   # Linting
mypy>=1.6.0                     # Type checking
pre-commit>=3.5.0               # Hooks Git

# ===== SÉCURITÉ =====
cryptography>=41.0.0            # Chiffrement
bcrypt>=4.0.0                   # Hachage passwords
PyJWT<2.0.0                     # JSON Web Tokens (version compatible avec gotrue)

# ===== OPTIONNEL - ANALYSE AVANCÉE =====
# matplotlib>=3.8.0             # Graphiques statiques
# seaborn>=0.12.0               # Visualisations statistiques
# jupyter>=1.0.0                # Notebooks interactifs
# dash>=2.14.0                  # Alternative à Streamlit

# ===== OPTIONNEL - MACHINE LEARNING =====
# tensorflow>=2.13.0           # Deep Learning
# pytorch>=2.1.0               # Deep Learning alternatif
# xgboost>=1.7.0               # Gradient boosting

# ===== OPTIONNEL - DÉPLOIEMENT =====
# gunicorn>=21.2.0             # Serveur WSGI
# nginx>=1.25.0                # Serveur web
# docker>=6.1.0                # Containerisation

# ===== VERSION CONSTRAINTS =====
# Python >= 3.8 requis pour support typing avancé
# Streamlit >= 1.28 pour nouvelles fonctionnalités
# Pandas >= 2.1 pour meilleures performances
# Plotly >= 5.17 pour graphiques interactifs

# ===== INSTALLATION RECOMMANDÉE =====
# 1. Créer environnement virtuel:
#    python -m venv venv
#    source venv/bin/activate  # Linux/Mac
#    venv\Scripts\activate     # Windows
#
# 2. Mettre à jour pip:
#    pip install --upgrade pip
#
# 3. Installer dépendances:
#    pip install -r requirements.txt
#
# 4. Vérifier installation:
#    python -c "import streamlit, pandas, plotly; print('✅ Installation OK')"

# ===== DÉPENDANCES SYSTÈME =====
# Sur Ubuntu/Debian:
# sudo apt-get update
# sudo apt-get install python3-dev postgresql-client libpq-dev
# sudo apt-get install build-essential
#
# Sur macOS:
# brew install postgresql
# xcode-select --install
#
# Sur Windows:
# Installer Visual Studio Build Tools
# Télécharger PostgreSQL depuis postgresql.org

# ===== ALTERNATIVES LÉGÈRES =====
# Pour installation minimale (remplacer dans requirements.txt):
# streamlit-lightweight>=1.0.0  # Version allégée
# plotly-express>=0.4.1         # Plotly minimal
# pandas-minimal>=2.1.0         # Pandas sans dépendances optionnelles
